model{
for (pp in 1:P) {

#int[pp,1] ~ dnorm(0, 1)
Y[pp,1] ~ dnorm(0, 1)

beta0[pp] ~ dnorm(beta00, tau_beta0)
beta1[pp] ~ dnorm(beta10, tau_beta1)
#intercept[pp] ~ dnorm(MU0, 1/pow(sd_MU,2))
intercept[pp,1] = beta0[pp]

AR[pp] ~ dnorm(AR0, 1/pow(sd_AR,2))T(-1,1)
betaIIV0[pp] ~ dnorm(betaIIV00, 1/pow(sd_betaIIV0,2))
betaIIV1[pp] ~ dnorm(betaIIV10, 1/pow(sd_betaIIV1,2))

# from T2 to maxT[pp]
 for (bb in 1:nrPeriod){
    
   #intercept[pp,bb] = beta0[pp] + beta1[pp]*time[bb]
   #logIIV[pp,bb] = betaIIV0[pp] + betaIIV1[pp]*time[bb]
   
   for(tt in (nrObs[bb]+1):nrObs[bb+1]){
     #int[pp,tt] ~ dnorm(intercept[pp,bb], tau_int)
     #mus[pp,tt] <- int[pp,tt] + AR * (Y[pp,tt-1] - int[pp,tt-1]) 
     #logIIV[pp,tt] ~ dnorm(betaIIV0[pp] + betaIIV1[pp]*time[bb], 1/pow(sd_IIV,2))
     #logIIV[pp,tt] ~ dnorm(betaIIV00 + betaIIV10*time[bb], 1/pow(sd_IIV,2))
     #logIIV[pp,tt] = betaIIV00 + betaIIV10*time[bb]
     
     intercept[pp,tt] = beta0[pp] + beta1[pp]*time[bb]
     logIIV[pp,tt] = betaIIV0[pp] + betaIIV1[pp]*time[bb]
	 mus[pp,tt] <- intercept[pp,tt] + AR[pp] * (Y[pp,tt-1] - intercept[pp,tt])
	 Y[pp,tt] ~ dnorm(mus[pp,tt], 1/exp(logIIV[pp,tt]))

} # close loop over time points

}

} # close loop over persons

# priors
#AR ~ dnorm(0, 1)T(-1,1)
#tau_noise ~ dgamma(0.001,0.001)
#sd_noise = pow(tau_noise, -1/2)
AR0 ~ dnorm(0,1)T(-1,1)
sd_AR ~ dunif(0, 1)

beta00 ~ dnorm(0, 0.01)
tau_beta0 ~ dgamma(0.001,0.001)
sd_beta0 = pow(tau_beta0,-1/2)
beta10 ~ dnorm(0, 0.01)
tau_beta1 ~ dgamma(0.001,0.001)
sd_beta1 = pow(tau_beta1,-1/2)

#beta1 ~ dnorm(0, 1)
#sd_beta0 = pow(tau_beta0, -1/2)
#beta10 ~ dnorm(0, 0.01)
#tau_beta1 ~ dgamma(0.001,0.001)
#sd_beta1 = pow(tau_beta1, -1/2)

#tau_int ~ dgamma(0.001,0.001)
#sd_int = pow(tau_int, -1/2)

#MU0 ~ dnorm(0, 0.01)
#sd_MU ~ dunif(0, 10)

betaIIV00 ~ dnorm(0,0.1)
betaIIV10 ~ dnorm(0,0.1)
sd_betaIIV0 ~ dunif(0,10)
sd_betaIIV1 ~ dunif(0,10)

#sd_IIV ~ dunif(0,10)

} # end of model

