model{
for (pp in 1:P) {

## odds: tansition probability matrices 
## midx: regime indicators

# 1st observation
odds[pp,1,1] <- 0.9
odds[pp,1,2] <- 0.1

midx[pp,1]~dcat(odds[pp,1,])

#intercept[pp,1]~dnorm(50, 0.01) 

beta0[pp] ~ dnorm(beta00, 1/pow(sd_beta0,2)) 
#beta1[pp] ~ dnorm(beta10, 1/pow(sd_beta1,2))
beta1[pp] = beta10

intercept[pp,1] = beta0[pp]

Y[pp,1] ~ dnorm(50, 0.01)

AR[pp] ~ dnorm(AR0, tau_AR)T(-1,1)

gamma[1,pp] = 0
gamma[2,pp] ~ dnorm(gamma0_2, 1/pow(sd_gamma_2,2))T(-8,8)

#gamma[1,pp] = 0
#gamma[2,pp] ~ dnorm(gamma0[2], 1/pow(sd_gamma[2],2))T(-8,8)

#betasMU[1,pp] ~ dnorm(beta00, 1/pow(sd_beta0,2))
#betasMU[2,pp] ~ dnorm(beta10 , 1/pow(sd_beta1,2))

#betasIIV[1,pp] ~ dnorm(betaIIV00, 1/pow(sd_betaIIV0,2))T(0,8)
#betasIIV[2,pp] ~ dnorm(betaIIV10, 1/pow(sd_betaIIV1,2))T(-1,1)
#gamma[1,pp] = gamma0[1]
#gamma[2,pp] = gamma0[2] 
#gamma[2,pp] ~ dnorm(gamma0[2], tau_gamma_2)T(0,8)

# from T2 to maxT[pp]
for(bb in 1:nrPeriod){

#logIIVgcm[pp,bb] = betasIIV[1,pp] + betasIIV[2,pp]*timepoint[bb]

for(tt in (nrObs[pp,bb]+1):nrObs[pp,bb+1]){
      	    
# from regime midx[pp,tt-1] to regime 1
odds[pp,tt,1] <- exp(alpha[1,1,midx[pp,tt-1]]+alpha[2,1,midx[pp,tt-1]]*Period2[pp,tt]*G3[pp])

# from regime midx[pp,tt-1] to regime 2
odds[pp,tt,2] <- exp(alpha[1,2,midx[pp,tt-1]]+alpha[2,2,midx[pp,tt-1]]*Period2[pp,tt]*G3[pp])

midx[pp,tt]~dcat(odds[pp,tt,])

#intercept[pp,tt] = betasMU[1,pp] + betasMU[2,pp]*time[pp,tt]
#mus[pp,tt] <-  intercept[pp,tt] + AR[pp] * (Y[pp,tt-1] - intercept[pp,tt-1]) 
#logIIV[pp,tt] = gamma[midx[pp,tt],pp] + logIIVgcm[pp,bb]
#Y[pp,tt] ~ dnorm(mus[pp,tt], 1/exp(logIIV[pp,tt]))

intercept[pp,tt] = beta0[pp] + beta1[pp]*time[bb,tt]+gamma[midx[pp,tt],pp]
Y[pp,tt] ~ dnorm(intercept[pp,tt] + AR[pp] * (Y[pp,tt-1] - intercept[pp,tt-1]), 1/IIV_0)

#logIIV[pp,tt] = gamma[midx[pp,tt],pp]
#logIIV[pp,tt] = betaIIV00+gamma[midx[pp,tt],pp] 
#Y[pp,tt] ~ dnorm(intercept[pp,tt] + AR[pp] * (Y[pp,tt-1] - intercept[pp,tt-1]), 1/exp(logIIV[pp,tt]))

} # close loop over time points
}
} # close loop over persons

# priors
# IIV
#gamma0[1]=0
#gamma0[2] = gamma0[1] + shift
gamma0_2=0+shift
shift ~ dunif(0, 10)
#sd_gamma[1] = 0
tau_gamma_2 ~ dgamma(0.001,0.001)
sd_gamma_2 = pow(tau_gamma_2, -1/2)
#sd_gamma[2] = pow(tau_gamma_2, -1/2)

#gamma0[1] ~ dnorm(0, 0.01)T(-10,10)
#gamma0[2] = gamma0[1] + diff
#diff ~ dunif(0,20)
#gamma0[2] ~ dunif(0,8)
#for(kk in 1:3){
#betaG3[kk] ~ dnorm(0, 0.01)
#}
#for(kk in 1:2){
#tau_gamma[kk] ~ dgamma(0.001,0.001)
#sd_gamma[kk] = pow(tau_gamma[kk], -1/2)
#sd_gamma[2] ~ dunif(0,5)
#}


#AR ~ dnorm(0, 1)T(-1,0.6)
AR0 ~ dnorm(0, 1)T(-1,1)
#sd_AR ~ dunif(0,0.5)
tau_AR ~ dgamma(0.001,0.001)
sd_AR = pow(tau_AR, -1/2)

IIV_0 ~ dunif(0,10)

#AR_Cov ~ dnorm(0,1)T(-1,1)
#tau_noise_Cov ~ dgamma(0.001,0.001)
#sd_noise_Cov = pow(tau_noise_Cov, -1/2)


beta00 ~ dnorm(50,0.01) 
beta10  ~ dnorm(0,0.01)
sd_beta0 ~ dunif(0,5)
#sd_beta1 ~ dunif(0,5)

#for(kk in 1:2){
#tau_betasMU[kk] ~ dgamma(0.001,0.001)
#sd_betasMU[kk] = pow(tau_betasMU[kk], -1/2)
#sd_betasMU[kk] ~ dunif(0,5)
#}

#betaIIV00 ~ dnorm(0,0.01) 
#betaIIV10 ~ dnorm(0,0.01)
#sd_betaIIV0 ~ dunif(0,5)
#sd_betaIIV1 ~ dunif(0,5)

#for(kk in 1:2){
#sd_betasIIV[kk] ~ dunif(0,5)
#}


#tau_int ~ dgamma(0.001,0.001)
#sd_int = pow(tau_int, -1/2)

for(kk in 1:2){
  alpha[kk,2,1] ~ dnorm(0,1)#0.1
  alpha[kk,1,1] <- 0
  alpha[kk,1,2] ~ dnorm(0,1)#0.1
  alpha[kk,2,2] <- 0
}

} # end of model

